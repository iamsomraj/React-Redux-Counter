{"version":3,"sources":["Containers/Counter/Counter.js","store/actionCreators.js","store/actionTypes.js","Containers/Result/Result.js","App.js","Util/Util.js","store/Reducers/counterReducer.js","store/Reducers/resultReducer.js","index.js","Containers/Counter/Counter.module.css","Containers/Result/Result.module.css"],"names":["connect","state","ctr","counter","dispatch","onInc","type","onDec","onAdd","value","onDecrease","props","className","counterStyle","header","style","textAlign","button","onClick","rslts","res","results","onShow","result","console","log","setTimeout","storeResult","actionCreators","onDel","id","disabled","ResultStyle","map","key","App","render","React","Component","updateObject","oldObject","newValues","initialState","counterReducer","action","resultReducer","concat","Date","filter","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","getState","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.935a74b5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actionCreators';\r\n\r\nimport counterStyle from './Counter.module.css';\r\n\r\nconst Counter = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={counterStyle.header}>Counter: {props.ctr}</div>\r\n      <div style={{ textAlign: 'center' }}>\r\n        <button className={counterStyle.button} onClick={props.onInc}>\r\n          Increment\r\n        </button>\r\n        <button className={counterStyle.button} onClick={props.onDec}>\r\n          Decrement\r\n        </button>\r\n        <button className={counterStyle.button} onClick={() => props.onAdd(10)}>\r\n          Add Value 10\r\n        </button>\r\n        <button\r\n          className={counterStyle.button}\r\n          onClick={() => props.onDecrease(5)}\r\n        >\r\n          Decrease Value 5\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ctr: state.ctr.counter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onInc: () => dispatch(actionCreators.increment()),\r\n    onDec: () => dispatch(actionCreators.decrement()),\r\n    onAdd: (value) => dispatch(actionCreators.addValue(value)),\r\n    onDecrease: (value) => dispatch(actionCreators.decValue(value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const increment = () => {\r\n  return {\r\n    type: actionTypes.INCREMENT,\r\n  };\r\n};\r\n\r\nexport const decrement = () => {\r\n  return {\r\n    type: actionTypes.DECREMENT,\r\n  };\r\n};\r\n\r\nexport const addValue = (val) => {\r\n  return {\r\n    type: actionTypes.ADD_VALUE,\r\n    value: val,\r\n  };\r\n};\r\n\r\nexport const decValue = (val) => {\r\n  return {\r\n    type: actionTypes.DEC_VALUE,\r\n    value: val,\r\n  };\r\n};\r\n\r\nexport const storeResult = (result) => {\r\n  return {\r\n    type: actionTypes.STORE_RESULT,\r\n    value: result,\r\n  };\r\n};\r\n\r\nexport const storeAsync = (result) => {\r\n  console.log('Timer starts');\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      console.log('Timer stops');\r\n      dispatch(storeResult(result));\r\n    }, 1000);\r\n  };\r\n};\r\n\r\nexport const delResult = (id) => {\r\n  return {\r\n    type: actionTypes.DELETE_RESULT,\r\n    value: id,\r\n  };\r\n};\r\n","export const INCREMENT = 'INCREMENT';\r\nexport const DECREMENT = 'DECREMENT';\r\nexport const ADD_VALUE = 'ADD_VALUE';\r\nexport const DEC_VALUE = 'DEC_VALUE';\r\n\r\nexport const STORE_RESULT = 'STORE_RESULT';\r\nexport const DELETE_RESULT = 'DELETE_RESULT';\r\n","import React from 'react';\r\nimport ResultStyle from './Result.module.css';\r\nimport * as actionCreators from '../../store/actionCreators';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst Result = (props) => {\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <button\r\n        disabled={props.counter === 0}\r\n        className={ResultStyle.button}\r\n        onClick={() => props.onShow(props.counter)}\r\n      >\r\n        Show Result\r\n      </button>\r\n      {props.rslts &&\r\n        props.rslts.map((result) => (\r\n          <div\r\n            className={ResultStyle.result}\r\n            key={result.id}\r\n            onClick={() => props.onDel(result.id)}\r\n          >\r\n            {result.result}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rslts: state.res.results,\r\n    counter: state.ctr.counter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onShow: (result) => dispatch(actionCreators.storeAsync(result)),\r\n    onDel: (id) => dispatch(actionCreators.delResult(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);\r\n","import React from 'react';\r\nimport Counter from './Containers/Counter/Counter';\r\nimport Result from './Containers/Result/Result';\r\n\r\nclass App extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <div>\r\n        <Counter />\r\n        <Result />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\n \r\n\r\nexport default App;\r\n","export const updateObject = (oldObject, newValues) => {\r\n  return {\r\n    ...oldObject,\r\n    ...newValues,\r\n  };\r\n};\r\n","import * as actionTypes from '../actionTypes';\r\nimport { updateObject } from '../../Util/Util';\r\n\r\nconst initialState = {\r\n  counter: 0,\r\n};\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INCREMENT:\r\n      return updateObject(state, { counter: state.counter + 1 });\r\n    case actionTypes.DECREMENT:\r\n      return updateObject(state, { counter: state.counter - 1 });\r\n    case actionTypes.ADD_VALUE:\r\n      return updateObject(state, { counter: state.counter + action.value });\r\n    case actionTypes.DEC_VALUE:\r\n      return updateObject(state, { counter: state.counter - action.value });\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default counterReducer;\r\n","import * as actionTypes from '../actionTypes';\r\nimport { updateObject } from '../../Util/Util';\r\n\r\nconst initialState = {\r\n  results: [],\r\n};\r\n\r\nconst resultReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.STORE_RESULT:\r\n      return updateObject(state, {\r\n        results: state.results.concat({\r\n          id: new Date(),\r\n          result: action.value,\r\n        }),\r\n      });\r\n    case actionTypes.DELETE_RESULT: {\r\n      return updateObject(state, {\r\n        results: state.results.filter((result) => result.id !== action.value),\r\n      });\r\n    }\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default resultReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport counterReducer from './store/Reducers/counterReducer';\r\nimport resultReducer from './store/Reducers/resultReducer';\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n  ctr: counterReducer,\r\n  res: resultReducer,\r\n});\r\n\r\nconst loggerMiddleware = (store) => (next) => (action) => {\r\n  console.log('Middleware dispatching', action);\r\n  const result = next(action);\r\n  console.log('Middleware newstate', store.getState());\r\n  return result;\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(loggerMiddleware, thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Counter_header__3Orzi\",\"button\":\"Counter_button__EaP1O\",\"bounce\":\"Counter_bounce__1zahu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Result_button__V_zXt\",\"result\":\"Result_result__2ZYuj\"};"],"sourceRoot":""}